ИНТРО
Добрый день.
Сегодня я хотел бы вам рассказать о том что такое система контроля версий и как она может помочь вам в образовании. 
Многие из вас, возможно, уже с нею знакомы, а для тех кто еще не знаком в ходе данного рассказа вы сами поймете что это такое и для чего ее можно использовать.


Слайд 2
- Определение
Чаще всего данный инструмент используется для разработки программного обеспечения, хотя на самом деле вы можете 
использовать контроль версий практически для любых типов файлов.

Существует множество различных Систем контроля версий, от всемирно признынных, до частных, 
созданных специально с расчетем на определенную задачу, или определенный коллектив, однако все примеры которые я буду приводить далее
будут основаны на одной из наиболее популярных СКВ - git

Слайд 3
Наверное у людей не знакомых с данной системой может возникнуть вопрос о том, зачем использовать какую-то другую программу, 
если в случае желания хранить версии своей папки
Самым простым решением будет просто копировать все что есть в папке на данный момент, 
создавать новую папку (если еще немного подумать то можно отметить время создания и какое-то маломальски значимое имя) 
и сохранять в нее все файлы?
Таким образом получим, казалось-бы, тоже самое что дает нам система контроля версий
Однако существует множество причин отвергнуть данный вариант.
Прежде всего данный подход приведет к тому что обьемы данных хранимых на компьютере с течением времени будет увеличиваться 
в зависимости от количества изменений в каждой версии не линейно а по вертикально направленной криволинейной тректории.
Тогда как модель хранения данных систем контроля версий (в частности git) как правило основана на сохранении дельт 
(разницы) между различными версиями программы. 
Что приводит к тому что обьем хранимых данных будет линейно зависеть от размера изменений.

так же необходимо сказать что если в ручную вести учет изменений то существует шанс человеческой ошибки 
Чего автоматизированная система контроля версий не допускает


Слайд 4
Для того чтобы в дальнейшем более предметно общаться необходимо внести базовую терминологю.
Основными понятиями для системы контроля версий являются

"git-Репозиторий" - хранилище файлов данных в которое включена поддержка git-команд. 
Внутри служебных файлов репозитория хранятся дельты различных версий репозитория,
которые позволяют в любой момент времени переключиться на выбранный пользователем "снимок" репозитория 
- проще говоря это работает как навороченная папка на вашем компьютере

"Коммит" - тот самый "снимок" вашего репозитория - проще говоря версия данной папки - 
внутри данных комита хранится не только сам снимок папки, но так же:
Автор записанных изменений
Дата внесенных изменений
Уникальный идентификатор внесенных изменений
Локальное название коммита


Слайд 5
Для обеспечения работы в команде у систем контроля версий как правило существуют 2 вида репозиториев - локальные и удаленные
Локальные - репозитории находящиеся на вашем конкретном компьютере и существующие отдельно от всех прочих
Удаленные - репозитории находящиеся на серверах вашей системы контроля версий (в нашем случае - git - github), 
и позволяющие получить доступ к вашему репозиторию из любого компьютера подключенного к интернету
Необходимо отметить что фиксирование изменений в локальном и удаленных репозиториях происходит абсолютно независимо друг от друга,
и только при выполнении определенной последовательности действий удаленный репозиторий сможет узнать об изменениях сделанных локально.

Слайд 6
И так какие же плюсы есть у данной технологии применимо к образованию.
-Прежде всего при правильной настройке, все данные будут сгруппированно и логично организованы 
так что не придется каждый раз рассылать учебные материалы на почту, отправлять людей в библиотеку и так далее.
-Так же при организации приема работ каждый препоаватель сможет указать на конкретное место где студент может ошибиться или отметить для себя,
какое место в том или ином задании вызывает затруднения
- Полная поддержка дистанционного образования, что как выяснилось может стать действительно необходимым. Каждый преподаватель должен будет всего раз правильно 
настроить свой репозиторий после чего не придется из года в год делать одни и е же действия чтобы придти в исходную точку,
но появится возможность постоянно улучшать и дополнять свою субственную программу, основываясь на задокументированном и 
сохраненном опыте прошлых лет
- Так же для большинства работ преподавателям важно знать как именно студент делал работу - а не конечный результат, 
что так же может бюыть показано при помощи истории коммитов сделанной работы. Например


